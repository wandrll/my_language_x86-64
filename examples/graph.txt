
Let Rectangle(x1, y1, x2, y2, colour){
    Line(x1, y1, x1, y2, colour);
    Line(x1, y2, x2, y2, colour);
    Line(x2, y2, x2, y1, colour);
    Line(x2, y1, x1, y1, colour);

}

Let Line(x1, y1, x2, y2, colour){
    Assuming_that(Abs(x1-x2) < 1 && Abs(y1-y2) < 1){
        Pixel(x1 , y1, colour);
        Pixel(x2 , y2, colour);
    }Otherwise{
        Let xm = (x1+x2)/2;
        Let ym = (y1+y2)/2;
        Line(x1, y1, xm, ym, colour);
        Line(xm, ym, x2, y2, colour);
    }
}

Let Circle(x, y, radius, colour){
    Let End = 3.14159265359/4;

    Let phi = 0;

    While(phi <= End){

        Let xR = Cos(phi)*radius;
        Let yR = Sin(phi)*radius;

        Pixel(x + xR ,  y + yR, colour);
        Pixel(x + xR ,  y - yR, colour);
        Pixel(x - xR ,  y + yR, colour);
        Pixel(x - xR ,  y - yR, colour);
        
        Pixel(x + yR, y + xR , colour);
        Pixel(x - yR, y + xR , colour);
        Pixel(x + yR, y - xR , colour);
        Pixel(x - yR, y - xR , colour);
        



        phi+=0.01;
    }


}


Let main(){
    Window;
    Circle(15, 40, 80, 4294967295);
    Line(-100, 16, 180, 2, 3294967295);

    Rectangle(-130, 40, 130, 200, 1294167295);


    Redraw;
}


